/* Efecto Zoom In en Textos o Imagenes*/
.imagenzoomin {
    -webkit-transform: scale(1);
    transform: scale(1);
    -webkit-transition: .3s ease-in-out;
    transition: .3s ease-in-out;
}

.imagenzoomin:hover {
    -webkit-transform: scale(1.2);
    transform: scale(1.2);
}


/*Efecto Zoom Out en Textos o Imagenes*/
.imagenzoomout {
    -webkit-transform: scale(1.5);
    transform: scale(1.5);
    -webkit-transition: .3s ease-in-out;
    transition: .3s ease-in-out;
}

.imagenzoomout:hover {
    -webkit-transform: scale(1);
    transform: scale(1);
}


/* Boton Brilloso Estilo "11" */
.btn-11 {
    border: none;
    background: rgb(251,33,117);
    background: linear-gradient(0deg, rgba(246, 213, 78, 1) 0%, rgba(152, 132, 49, 1) 100%);
    color: #fff;
    overflow: hidden;
}

.btn-11:hover {
    text-decoration: none;
    color: #fff;
}

.btn-11:before {
    position: absolute;
    content: '';
    display: inline-block;
    top: -180px;
    left: 0;
    width: 30px;
    height: 100%;
    background-color: #fff;
    animation: shiny-btn1 3s ease-in-out infinite;
}

.btn-11:hover {
    opacity: .7;
}

.btn-11:active {
    box-shadow: 4px 4px 6px 0 rgba(255,255,255,.3),
              -4px -4px 6px 0 rgba(116, 125, 136, .2), 
    inset -4px -4px 6px 0 rgba(255,255,255,.2),
    inset 4px 4px 6px 0 rgba(0, 0, 0, .2);
}

@-webkit-keyframes shiny-btn1 {
    0% {
        -webkit-transform: scale(0) rotate(45deg);
        opacity: 0;
    }

    80% {
        -webkit-transform: scale(0) rotate(45deg);
        opacity: 0.5;
    }

    81% {
        -webkit-transform: scale(4) rotate(45deg);
        opacity: 1;
    }

    100% {
        -webkit-transform: scale(50) rotate(45deg);
        opacity: 0;
    }
}

/* Contador de Años */
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Contador de Años</title>
<style>
    @import url('https://fonts.googleapis.com/css2?family=Inter:wght@700&display=swap');

    .contador-container-b {
        display: flex;
        align-items: center;
        justify-content: center; /* Centra horizontalmente */
    }

    .contador-b {
        font-family: 'Inter', sans-serif;
        font-weight: bold;
        font-size: 60px;
        /* background: linear-gradient(to bottom, #96D934, #C5EE27); */
        -webkit-background-clip: text;
        background-clip: text;
        color: transparent;
        opacity: 0; /* Inicialmente oculto */
        transition: opacity 1s ease-in-out;
        color: #f79c19;
    }

    

    @media (max-width: 768px) {
        .contador-b {
            font-size: 60px; /* Ajustar el tamaño de fuente para pantallas más pequeñas */
        }

        
    }
</style>

<!-- Contenedor para el contador de 9 Años -->
<div id="counterContainerB" class="contador-container-b">
    <span class="contador-b" id="counterB">0</span>
</div>

<script>
    const contadorB = document.getElementById('counterB');
    let numeroB = 0;
    const objetivoB = 6;
    const velocidadB = 450; // Puedes ajustar la velocidad de incremento

    function actualizarContadorB() {
        if (numeroB < objetivoB) {
            numeroB += 1;
            contadorB.textContent = numeroB;
            setTimeout(actualizarContadorB, velocidadB);
        }
    }

    function handleIntersectionB(entries, observer) {
        entries.forEach((entry) => {
            if (entry.isIntersecting) {
                actualizarContadorB();
                contadorB.style.opacity = 1;
                observer.unobserve(entry.target);
            }
        });
    }

    const optionsB = {
        threshold: 0.5,
    };

    const observerB = new IntersectionObserver(handleIntersectionB, optionsB);
    observerB.observe(contadorB);
</script>


/* Definición de la animación */
@keyframes parpadeo {
    0% {
        opacity: 1;
    }

    50% {
        opacity: 0.5;
    }

    100% {
        opacity: 1;
    }
}
/* Aplicación de la animación a la clase "parpadeo" */
.parpadeo {
    animation: parpadeo 1s infinite;
}


/* Cambiar color de "Play Video" */
.hosted-video-thumbnail:hover:after {
    background-color: red!important;
}

/* Aplicación de la animación a la clase "parpadeo" */
.parpadeo {
    animation: parpadeo 1s infinite;
}

/* Boton Gradiante ejemplo Secret Garden" */

.btn-5 {
    color: #fff;
    cursor: pointer;
    border: none;
    background-size: 300% 100%;
    border-radius: 50px;
    moz-transition: all .4s ease-in-out;
    -o-transition: all .4s ease-in-out;
    -webkit-transition: all .4s ease-in-out;
    transition: all .4s ease-in-out;
}

.btn-5:hover {
    background-position: 100% 0;
    moz-transition: all .4s ease-in-out;
    -o-transition: all .4s ease-in-out;
    -webkit-transition: all .4s ease-in-out;
    transition: all .4s ease-in-out;
}

.btn-5:focus {
    outline: none;
}

.btn-5 {
    background-image: linear-gradient(to right, #263129, #4cbe6e, #263129, #2bb673);
    box-shadow: 0 4px 15px 0 rgba(68, 88, 74, 0.75);
}

*CODIGO PARA SLIDERS CON EFECTO*

<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Alternancia de Imágenes con Efecto de Degradado</title>
<style>
  body {
    margin: 0;
    padding: 0;
  }
  #image-container-2 {
    position: center;
    width: 90%; /* Ajusta el tamaño según tus necesidades */
    height: 80vh; /* Ajusta el tamaño según tus necesidades */
    overflow: hidden;
  }
  #image-container-2 img {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    opacity: 0;
    transition: opacity 3s ease-in-out;
  }
  #image-container-2 img.active-2 {
    opacity: 1;
  }
  
  @media screen and (max-width: 768px) { 
    #image-container-2 {
    position: center;
    width: 90%; /* Ajusta el tamaño según tus necesidades */
    height: 40vh; /* Ajusta el tamaño según tus necesidades */
    overflow: hidden;
    }
  }
</style>
</head>
<body>
<div id="image-container-2">
  <img src="https://storage.googleapis.com/msgsndr/11Tu6WSGKtvSwCpvLze1/media/664545af0a61a558425398a1.jpeg" class="active-2">
  <img src="https://storage.googleapis.com/msgsndr/11Tu6WSGKtvSwCpvLze1/media/664545afe7e99b655a6ef714.jpeg">
</div>
<script>
  const images2 = document.querySelectorAll('#image-container-2 img');
  let activeIndex2 = 0;

  setInterval(() => {
    images2[activeIndex2].classList.remove('active-2');
    activeIndex2 = (activeIndex2 + 1) % images2.length;
    images2[activeIndex2].classList.add('active-2');
  }, 3000); // Cambia el tiempo según tu preferencia de duración de cada imagen
</script>
</body>
</html>

*Gradient Bold Text*
.gradientboldtext  strong {
    background: -webkit-linear-gradient(90deg, rgba(90,95,79,1) 20%, rgba(130,138,114,1) 80%;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
}  

/*** ESTILOS BOTÓN SLIDE CLOSE ***/
.ov-btn-slide-close {
    background: #D18540;
 /* color de fondo */
    color: #4741d7;
 /* color de fuente */
    border: 2px solid #D18540;
 /* tamaño y color de borde */
    padding: 16px 20px;
    border-radius: 15px;
 /* redondear bordes */
    position: relative;
    z-index: 1;
    overflow: hidden;
    display: inline-block;
}

.ov-btn-slide-close:before, .ov-btn-slide-close:after {
    content: "";
    z-index: -1;
    position: absolute;
    width: 50%;
    height: 100%;
    top: 0;
    left: -50%;
    background-color: #2F2E2D;
 /* color de fondo hover */
    -webkit-transition: all 0.3s ease-in-out;
    -o-transition: all 0.3s ease-in-out;
    transition: all 0.3s ease-in-out;
}

.ov-btn-slide-close:after {
    left: 100%;
}

.ov-btn-slide-close:hover {
    color: #fff;
 /* color de fuente hover */
}

.ov-btn-slide-close:hover:before {
    left: 0;
}

.ov-btn-slide-close:hover:after {
    left: 50%;
}

*CODIGO PARA efecto pulsante en boton*
.elButton {
animation: glow 1500ms infinite;
background-color: #2CB67D !important;
}

@keyframes glow {
  0% {
    box-shadow: #2CB67D 0 0 0 0;
  }
  75% {
    box-shadow: #2CB67D00 0 0 0 10px;
  }
}


EFECTO DE ZOOM DE IMAGEN CON REBOTE
/* Bounce In */
.hvr-bounce-in {
    display: inline-block;
    vertical-align: middle;
    -webkit-transform: perspective(1px) translateZ(0);
    transform: perspective(1px) translateZ(0);
    box-shadow: 0 0 1px rgba(0, 0, 0, 0);
    -webkit-transition-duration: 0.5s;
    transition-duration: 0.5s;
}

.hvr-bounce-in:hover, .hvr-bounce-in:focus, .hvr-bounce-in:active {
    -webkit-transform: scale(1.2);
    transform: scale(1.2);
    -webkit-transition-timing-function: cubic-bezier(0.47, 2.02, 0.31, -0.36);
    transition-timing-function: cubic-bezier(0.47, 2.02, 0.31, -0.36);
}

EFECTO DE CONFETTI EN PANTALLA

<style>
    body {
        margin: 0;
    }

    #canvas {
        position: fixed;
        top: 0;
        left: 0;
    }

    .confetti {
        z-index: -2;
    }
</style>


<canvas class="confetti" id="canvas" style="pointer-events: none; z-index: -1;"></canvas>


<script id="confettiScript">
     let canvas = document.getElementById("canvas");
    let ctx = canvas.getContext("2d");
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;
    let cx = ctx.canvas.width / 2;
    let cy = ctx.canvas.height / 2;

    let confetti = [];
   const confettiCount = 300;
     const gravity = 0.5;
    const terminalVelocity = 5;
    /* const drag = 0.075; */
    const colors = [
        { front: 'red', back: 'darkred' },
        { front: 'green', back: 'darkgreen' },
        { front: 'blue', back: 'darkblue' },
        { front: 'yellow', back: 'darkyellow' },
        { front: 'orange', back: 'darkorange' },
        { front: 'pink', back: 'darkpink' },
        { front: 'purple', back: 'darkpurple' },
        { front: 'turquoise', back: 'darkturquoise' }
    ];

    let resizeCanvas = () => {
        canvas.width = window.innerWidth;
        canvas.height = window.innerHeight;
        cx = ctx.canvas.width / 2;
        cy = ctx.canvas.height / 2;
    };

    let randomRange = (min, max) => Math.random() * (max - min) + min;

    let initConfetti = () => {
        for (let i = 0; i < confettiCount; i++) {
            confetti.push({
                color: colors[Math.floor(randomRange(0, colors.length))],
                dimensions: {
                    x: randomRange(10, 20),
                    y: randomRange(10, 30)
                },
                position: {
                    x: randomRange(0, canvas.width),
                    y: canvas.height - 1
                },
                rotation: randomRange(0, 2 * Math.PI),
                scale: {
                    x: 1,
                    y: 1
                },
                velocity: {
                    x: randomRange(-25, 25),
                    y: randomRange(0, -50)
                }
            });
        }
    };

    let render = () => {
        ctx.clearRect(0, 0, canvas.width, canvas.height);

        confetti.forEach((confetto, index) => {
            let width = confetto.dimensions.x * confetto.scale.x;
            let height = confetto.dimensions.y * confetto.scale.y;

            ctx.translate(confetto.position.x, confetto.position.y);
            ctx.rotate(confetto.rotation);

            confetto.velocity.x -= confetto.velocity.x * 0.075;
            confetto.velocity.y = Math.min(confetto.velocity.y + gravity, terminalVelocity);
            confetto.velocity.x += Math.random() > 0.5 ? Math.random() : -Math.random();

            confetto.position.x += confetto.velocity.x;
            confetto.position.y += confetto.velocity.y;

            if (confetto.position.y >= canvas.height) confetti.splice(index, 1);

            if (confetto.position.x > canvas.width) confetto.position.x = 0;
            if (confetto.position.x < 0) confetto.position.x = canvas.width;

            confetto.scale.y = Math.cos(confetto.position.y * 0.1);
            ctx.fillStyle = confetto.scale.y > 0 ? confetto.color.front : confetto.color.back;

            ctx.fillRect(-width / 2, -height / 2, width, height);

            ctx.setTransform(1, 0, 0, 1, 0, 0);
        });

        window.requestAnimationFrame(render);
    }; 

    initConfetti();
    render();

    window.addEventListener('resize', function () {
        resizeCanvas();
    });

    window.addEventListener('load', function () {
        resizeCanvas();
    });
</script>

*****SLIDER VERTICAL****

<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Slider Vertical</title>
<style>
    .slider-container {
        width: 100%; /* Ancho del slider */
        height: 800px; /* Altura del slider */
        overflow: hidden; /* Para ocultar las imágenes adicionales */
        margin: 0 auto; /* Centra el slider horizontalmente */
    }

    .slider {
        width: 100%;
        height: 800px; /* Altura total del slider (número de imágenes * altura de cada imagen) */
        display: flex;
        flex-direction: column;
        transition: transform 0.5s ease-in-out; /* Transición suave entre diapositivas */
    }

    .slide {
        width: 100%;
         height: 47%; /* Ajusta la altura de cada slide (menos del 50% para dar espacio) */
        margin-bottom: 25px; /* Agrega espacio entre slides */
    }

    img {
        width: 100%;
        height: 100%;
        object-fit: cover; /* Ajusta las imágenes al tamaño del contenedor */
    }
  
  
    /* Media query para dispositivos móviles */
  @media screen and (max-width: 768px) { 
    
    .slider-container {
       
        height: 500px; /* Altura del slider */
       
    }
    
   .slider {
         
        height: 300px; /* Altura total del slider (número de imágenes * altura de cada imagen) */
         
    }
    
    .slide {
         
        width: 100%;
         height: 70%; /* Ajusta la altura de cada slide (menos del 50% para dar espacio) */
        margin-bottom: 15px; /* Agrega espacio entre slides */
         
    }
    
    img {
        width: 100%;
        height: 100%;
        
    }
    
    }
    
    
    
</style>



<div class="slider-container">
    <div class="slider">
        <div class="slide">
            <img src="https://storage.googleapis.com/msgsndr/9Dl6JTNQHR0p52eC7Zi6/media/658290c45567c09bdaf35ac4.jpeg" alt="Imagen 1">
        </div>
        <div class="slide">
            <img src="https://storage.googleapis.com/msgsndr/9Dl6JTNQHR0p52eC7Zi6/media/6582909f5567c010a9f35abe.jpeg" alt="Imagen 2">
        </div>
        <div class="slide">
            <img src="https://storage.googleapis.com/msgsndr/9Dl6JTNQHR0p52eC7Zi6/media/6582908fcd21c2dfa8685e11.jpeg" alt="Imagen 3">
        </div>
        <div class="slide">
            <img src="https://storage.googleapis.com/msgsndr/9Dl6JTNQHR0p52eC7Zi6/media/6582906b5567c07702f35a39.jpeg" alt="Imagen 4">
        </div>
        <div class="slide">
            <img src="https://storage.googleapis.com/msgsndr/9Dl6JTNQHR0p52eC7Zi6/media/65829050a0a47e3a982ec5ab.jpeg" alt="Imagen 5">
        </div>
        <div class="slide">
            <img src="https://storage.googleapis.com/msgsndr/9Dl6JTNQHR0p52eC7Zi6/media/6582908fcd21c2dfa8685e11.jpeg" alt="Imagen 6">
        </div>
    </div>
</div>

<script>
    const slider = document.querySelector('.slider');
    const slides = document.querySelectorAll('.slide');

    let index = 0;

    function showSlides() {
        index++;
        if (index >= slides.length - 1) {
            index = 0;
        }
        slider.style.transform = `translateY(-${index * 50}%)`; /* Mueve el slider verticalmente */
    }

    setInterval(showSlides, 3000); /* Cambia de slide cada 3 segundos (3000ms) */
</script>


Codigo de GOOGLE Althea Médicos IZQ
-------------------------
<!-- Google Tag Manager -->
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-TDNM29FC');</script>
<!-- End Google Tag Manager -->

<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=AW-16724811960">
</script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'AW-16724811960');
</script>

------------------------- Derecho

<!-- Google Tag Manager (noscript) -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-TDNM29FC"
height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->


/* BUTTON GLOW */
.btn-glow {
    color: #fff !important;
    display: inline-block;
    background: rgb(138,97,248);
    background: -moz-linear-gradient(left, rgba(138,97,248,1) 0%, rgba(236,95,231,1) 100%);
    background: -webkit-linear-gradient(left, rgba(138,97,248,1) 0%,rgba(236,95,231,1) 100%);
    background: linear-gradient(to right, rgba(138,97,248,1) 0%,rgba(236,95,231,1) 100%);
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#8a61f8', endColorstr='#ec5fe7',GradientType=1 );
    border: none;
    cursor: pointer;
    text-align: center;
    font-weight: bold;
    font-size: 16px;
    line-height: 56px;
    letter-spacing: 0.07em;
    text-decoration: none !important;
    text-transform: uppercase;
    padding: 0 30px;
    transition: 0.3s;
    box-shadow: none;
    animation: glow 3s infinite;
    animation-timing-function: ease-out;
    position: relative;
}

.btn-glow:hover {
    box-shadow: 0 0 0 10px #3daaa200;
    transition: .8s;
}

@keyframes glow {
    0% {
        box-shadow: 0 0 20px #8b61f844;
        text-shadow: 0 0 0px #fff;
    }

    40% {
        box-shadow: 0 0 100px #8b61f8ee;
        text-shadow: 0 0 20px #fff;
    }

    100% {
        box-shadow: 0 0 20px #8b61f844;
        text-shadow: 0 0 1px #fff;
    }
}

BUTTON ESTILO BRONCE

.btn-hover-shine {
    position: relative;
}

.button-gold-two {
    color: rgba(32, 32, 33, 1);
    text-shadow: 0 1px 2px rgba(255, 255, 255, 0.8), 0 -1px 2px rgba(255, 255, 255, 0.2);
    background: conic-gradient(from -580deg at 50% 50%,
		rgba(250, 216, 153, 1),
		rgba(250, 216, 153, 1),
		rgba(225, 185, 113, 1),
		rgba(212, 168, 93, 1),
		rgba(162, 106, 13, 1),
		rgba(180, 128, 43, 1),
		rgba(235, 179, 86, 1),
		rgba(254, 197, 104, 1),
		rgba(197, 141, 48, 1),
		rgba(161, 104, 11, 1),
		rgba(196, 154, 82, 1),
		rgba(230, 200, 150, 1),
		rgba(251, 228, 193, 1),
		rgba(251, 228, 193, 1),
		rgba(218, 176, 101, 1),
		rgba(196, 138, 38, 1),
		rgba(196, 138, 38, 1),
		rgba(196, 138, 38, 1),
		rgba(254, 198, 105, 1),
		rgba(254, 198, 105, 1),
		rgba(254, 198, 105, 1),
		rgba(174, 119, 40, 1),
		rgba(174, 119, 40, 1),
		rgba(131, 74, 3, 1),
		rgba(131, 74, 3, 1),
		rgba(177, 131, 64, 1),
		rgba(177, 131, 64, 1),
		rgba(225, 185, 113, 1),
		rgba(250, 216, 153, 1)
	);
    background: conic-gradient(from -706deg at 50% 50%,
		rgba(242, 203, 146, 1),
		rgba(242, 203, 146, 1),
		rgba(167, 119, 71, 1),
		rgba(167, 119, 71, 1),
		rgba(167, 119, 71, 1),
		rgba(253, 231, 182, 1),
		rgba(253, 231, 182, 1),
		rgba(223, 187, 137, 1),
		rgba(223, 187, 137, 1),
		rgba(223, 187, 137, 1),
		rgba(223, 187, 137, 1),
		rgba(168, 120, 72, 1),
		rgba(168, 120, 72, 1),
		rgba(168, 120, 72, 1),
		rgba(168, 120, 72, 1),
		rgba(199, 151, 91, 1),
		rgba(199, 151, 91, 1),
		rgba(253, 234, 182, 1),
		rgba(253, 234, 182, 1),
		rgba(221, 183, 128, 1),
		rgba(221, 183, 128, 1),
		rgba(201, 153, 93, 1),
		rgba(201, 153, 93, 1),
		rgba(201, 153, 93, 1),
		rgba(242, 203, 146, 1),
		rgba(242, 203, 146, 1)
	);
    background: conic-gradient(from -711deg at 50% 50%,
		rgba(226, 198, 135, 1),
		rgba(250, 229, 174, 1),
		rgba(226, 198, 135, 1),
		rgba(203, 160, 92, 1),
		
		rgba(214, 169, 93, 1),
		rgba(196, 142, 56, 1),
		rgba(196, 142, 56, 1),
		rgba(214, 169, 93, 1),
		
		rgba(203, 160, 92, 1),
		rgba(226, 198, 135, 1),
		rgba(250, 229, 174, 1),
		rgba(226, 198, 135, 1),
		rgba(203, 160, 92, 1),
		
		rgba(214, 169, 93, 1),
		rgba(196, 142, 56, 1),
		rgba(196, 142, 56, 1),
		rgba(214, 169, 93, 1),
		
		rgba(203, 160, 92, 1),
		rgba(226, 198, 135, 1),
		rgba(250, 229, 174, 1),
		rgba(226, 198, 135, 1),
		rgba(203, 160, 92, 1),
		
		rgba(214, 169, 93, 1),
		rgba(196, 142, 56, 1),
		rgba(196, 142, 56, 1),
		rgba(214, 169, 93, 1),
		
		rgba(203, 160, 92, 1),
		rgba(226, 198, 135, 1),
		rgba(250, 229, 174, 1),
		rgba(226, 198, 135, 1),
		rgba(203, 160, 92, 1),
		
		rgba(214, 169, 93, 1),
		rgba(196, 142, 56, 1),
		rgba(196, 142, 56, 1),
		rgba(214, 169, 93, 1),
		
		rgba(203, 160, 92, 1),
		rgba(203, 160, 92, 1)
	);
    background: conic-gradient(from -346deg at 50% 50%,
		rgba(248, 208, 149, 1),
		rgba(218, 176, 118, 1),
		rgba(167, 119, 71, 1),
		rgba(215, 183, 134, 1),
		rgba(255, 234, 185, 1),
		rgba(223, 190, 139, 1),
		rgba(165, 117, 68, 1),
		rgba(206, 160, 100, 1),
		rgba(255, 233, 183, 1),
		rgba(222, 185, 131, 1),
		rgba(201, 152, 92, 1),
		rgba(233, 199, 148, 1),
		rgba(248, 208, 149, 1)
	);
    background-repeat: no-repeat;
    background-size: 110% 120%;
    background-position: center center;
}

.button-shiny:hover.gold-two {
    -webkit-filter: saturate(110%) brightness(1.15);
    filter: saturate(110%) brightness(1.15);
}

* Contenedor del grid con scroll horizontal */ -----------
.grid {
    display: flex;
    overflow-x: auto;
  /* Permite desplazamiento horizontal */
    scroll-snap-type: x mandatory;
 /* Fija el desplazamiento en cada elemento */
    -webkit-overflow-scrolling: touch;
 /* Mejor scroll en dispositivos táctiles */
    gap: 10px !important;
 /* Espacio entre los elementos */
    padding: 1rem 0;
 /* Espaciado superior e inferior */
}

.grid::-webkit-scrollbar {
    height: 8px;
    background: #F1F1F1;
}

.grid::-webkit-scrollbar-thumb {
    background: #888;
    border-radius: 10px;
}

.grid::-webkit-scrollbar-thumb:hover {
    background: #555;
}
/* Cada item dentro del grid */
.item {
    flex: 0 0 auto;
 /* No se puede expandir, el tamaño depende de la imagen */
    scroll-snap-align: start;
 /* Alinea el elemento al inicio del contenedor */
    border-radius: 10px;
    overflow: hidden;
 /* Para que las imágenes no sobresalgan */
}
/* Estilo para las imágenes */
.img {
    width: auto;
 /* Mantiene el tamaño original de la imagen */
    height: auto;
 /* Mantiene el tamaño original de la imagen */
    display: block;
}

.img img {
    width: 100%;
 /* Hace que la imagen ocupe el 100% del contenedor */
    height: auto;
 /* Mantiene la proporción original de la imagen */
    object-fit: contain;
 /* Ajusta la imagen manteniendo su proporción */
    transition: transform 0.3s ease;
}

.img:hover img {
    transform: scale(1.05);
 /* Efecto de zoom al pasar el ratón */
}
/* Responsividad para pantallas más pequeñas */
@media (max-width: 768px) {
    .img {
        width: 150px;
        height: 250px;
 /* Tamaño más pequeño de las imágenes */
    }
}

@media (max-width: 480px) {
    .img {
        width: 100px;
        height: 200px;
 /* Tamaño aún más pequeño en móviles */
    }
}

@import "https://unpkg.com/open-props";

@import "https://unpkg.com/open-props/normalize.min.css";

.media-scroller {
    --spacer: var(--size-3);
    display: grid;
    gap: var(--spacer);
    grid-auto-flow: column;
    grid-auto-columns: 21%;
    padding: 0 var(--spacer) var(--spacer);
    overflow-x: auto;
    overscroll-behavior-inline: contain;
}

.media-scroller--with-groups {
    grid-auto-columns: 80%;
}

.media-group {
    display: grid;
    gap: var(--spacer);
    grid-auto-flow: column;
}

.media-element {
    display: grid;
    grid-template-rows: min-content;
    padding: 10px;
    background: var(--surface-2);
    border-radius: var(--radius-2);
    box-shadow: var(--shadow-2);
}

.media-element > img {
    inline-size: 100%;
    object-fit: cover;
}

.snaps-inline {
    scroll-snap-type: inline mandatory;
    scroll-padding-inline: var(--spacer, 1rem);
}

.snaps-inline > * {
    scroll-snap-align: start;
}
/* general styling */
.container {
    inline-size: min(100% - 4rem, 70rem);
    margin-inline: auto;
}

.flow {
    display: grid;
    gap: 10px;
 /* Espaciado general */
}

.page-header {
    padding-block: var(--size-9);
    margin-block-end: var(--size-9);
    background: var(--gradient-16);
    color: var(--gray-0);
    box-shadow: var(--shadow-2);
}

/* Contenedor del grid con scroll horizontal para celular */----------
.grid-mobile {
    display: flex;
    overflow-x: auto;
 /* Permite desplazamiento horizontal */
    scroll-snap-type: x mandatory;
 /* Fija el desplazamiento en cada elemento */
    -webkit-overflow-scrolling: touch;
 /* Mejor scroll en dispositivos táctiles */
    gap: 10px !important;
 /* Espacio entre los elementos */
    padding: 1rem 0;
 /* Espaciado superior e inferior */
}

.grid-mobile::-webkit-scrollbar {
    height: 8px;
    background: #F1F1F1;
}

.grid-mobile::-webkit-scrollbar-thumb {
    background: #888;
    border-radius: 10px;
}

.grid-mobile::-webkit-scrollbar-thumb:hover {
    background: #555;
}

/* Cada item dentro del grid */
.item-mobile {
    flex: 0 0 auto;
 /* No se puede expandir, el tamaño depende de la imagen */
    scroll-snap-align: start;
 /* Alinea el elemento al inicio del contenedor */
    border-radius: 10px;
    overflow: hidden;
 /* Para que las imágenes no sobresalgan */
    margin-right: 10px;
 /* Añade espacio entre los ítems */
}

/* Estilo para las imágenes */
.img-mobile {
    width: 210px;
 /* Tamaño fijo para las imágenes */
    height: 373px;
 /* Tamaño fijo para las imágenes */
    display: block;
}

.img-mobile img {
    width: 100%;
 /* Hace que la imagen ocupe el 100% del contenedor */
    height: 100%;
 /* La imagen ocupará todo el espacio disponible */
    object-fit: cover;
 /* Ajusta la imagen manteniendo su proporción */
    transition: transform 0.3s ease;
}

.img-mobile:hover img {
    transform: scale(1.05);
 /* Efecto de zoom al pasar el ratón */
}

/* Responsividad para pantallas móviles (max-width: 768px) */
@media (max-width: 768px) {
    .grid-mobile {
        display: flex;
        overflow-x: auto;
        gap: 10px;
        padding: 1rem 0;
    }

    .item-mobile {
        flex: 0 0 auto;
        scroll-snap-align: start;
        border-radius: 10px;
        overflow: hidden;
        margin-right: 10px;
 /* Espaciado entre imágenes */
    }

    .img-mobile {
        width: 210px;
 /* Imagen ajustada para dispositivos móviles */
        height: 373px;
 /* Imagen ajustada para dispositivos móviles */
    }
}

/* Responsividad adicional para dispositivos más pequeños (max-width: 480px) */
@media (max-width: 480px) {
    .grid-mobile {
        display: flex;
        overflow-x: auto;
        gap: 10px;
        padding: 1rem 0;
    }
  
  /* Ocultar barra de desplazamiento pero mantener el scroll funcional */
    .grid-mobile::-webkit-scrollbar {
        display: none;
    }

    .item-mobile {
        flex: 0 0 auto;
        scroll-snap-align: start;
        border-radius: 10px;
        overflow: hidden;
        margin-right: 10px;
 /* Espaciado entre imágenes */
    }

    .img-mobile {
        width: 210px;
 /* Imagen ajustada para dispositivos móviles */
        height: 373px;
 /* Imagen ajustada para dispositivos móviles */
    }
}

SLIDER PARA ABOVES CON DEGRADADO
:root {
    --image-1: url('https://storage.googleapis.com/msgsndr/FSFWksgQn4nxtoKdFTJp/media/67507f9bb8cfdf343d5899db.webp');
    --image-2: url('https://storage.googleapis.com/msgsndr/FSFWksgQn4nxtoKdFTJp/media/677d6936e3a7108ceddad134.webp');
    --image-3: url('https://storage.googleapis.com/msgsndr/FSFWksgQn4nxtoKdFTJp/media/677d6dc7fb99541cb762a7de.webp');
}

@keyframes changeBackground {
    0%, 20% {
        background-image: var(--image-1);
    }

    30%, 50% {
        background-image: var(--image-2);
    }

    60%, 80% {
        background-image: var(--image-3);
    }

    90%, 100% {
        background-image: var(--image-1);
    }
}

#section-JWwFN2alOA {
    animation: changeBackground 10s infinite;
    background-size: cover;
    background-position: center;
    transition: background-image 0.3s ease-in-out;
    background-blend-mode: multiply;
    background-color: rgba(0, 0, 0, 0.4);
}



